name: Unit Tests
on: [push, pull_request]
jobs:
  Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Install lua
        run: |
          cd ${{ github.workspace }}; \
          curl -R -O http://www.lua.org/ftp/lua-5.4.3.tar.gz; \
          tar -xvf lua-5.4.3.tar.gz; \
          cd lua-5.4.3; \
          make all test 
      - name: Test with lua  
        run: |
          cd ${{ github.workspace }}/test/lua; \
          ../../lua-5.4.3/src/lua hw2_test.lua
      - name: Get LuaRocks
        run: |
          cd ${{ github.workspace }}; \
          cd lua-5.4.3/src; \
          wget http://luarocks.org/releases/luarocks-3.7.0.tar.gz; \
          tar zxpf luarocks-3.7.0.tar.gz; \
          cd luarocks-3.7.0; \
          ./configure && make ** sudo make install; \
          sudo luarocks install luasocket;
      - name: Get Penlight
        run: |
          luarocks install Ldoc -v
      - name: Document the Python Code
        run: |
          pip install pdoc3
          export PYTHONPATH="./src/py"
          pdoc3 --output-dir docs --force --html --template-dir docs src; \
          rsync -a docs/src/* docs; \
          rm -r docs/src; \
      - name: Remove Lua Files
        run: |
          rm -r lua-5.4.3; \
          rm *.tar.gz
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          foo=$(git status --porcelain)
          if [ -z "$foo" ]
          then
            echo "::set-output name=push::false"
          else
             git commit -m "Save Documentation" -a
            echo "::set-output name=push::true"
          fi
        shell: bash
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           branch: ${{ github.ref }}
      - run: echo "üçè This job's status is ${{ job.status }}."
        if: always()
